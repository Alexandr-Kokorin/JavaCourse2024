app:
  scheduler:
    enable: true
    interval: 600s
    force-check-delay: 10s
  database-access-type: jdbc
  connect-type: kafka
  retry:
    max-attempts: 5
    delay: 500
    multiplier: 2

spring:
  application:
    name: scrapper
  liquibase:
    enabled: false
  datasource:
    url: jdbc:postgresql://host.docker.internal:5432/scrapper
    username: postgres
    password: postgres
    driver-class-name: org.postgresql.Driver
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        enable_lazy_load_no_trans: true
  cache:
    cache-names:
      - rate-limit-buckets-scrapper
    caffeine:
      spec: maximumSize=100000,expireAfterAccess=3600s

bucket4j:
  enabled: true
  filters:
    - cache-name: rate-limit-buckets-scrapper
      url: /.*
      http-response-body: "{ \"status\": 429, \"error\": \"Too Many Requests\", \"message\": \"You have exhausted your API Request Quota\" }"
      rate-limits:
          cache-key: "getRemoteAddr()"
          bandwidths:
            - capacity: 10
              time: 1
              unit: minutes
              refill-speed: interval

server:
  port: 8080
  forward-headers-strategy: NATIVE

logging:
  config: classpath:log4j2-plain.xml

spring-doc:
  swagger-ui:
    path: /swagger-ui
  default-produces-media-type: application/json

kafka:
  bootstrapServers: host.docker.internal:29092
  clientId: scrapper
  acksMode: all
  deliveryTimeout: 60s
  lingerMs: 12_000
  batchSize: 100_000
  maxInFlightPerConnection: 5
  enableIdempotence: true
  schemaRegistryUrl: 'http://host.docker.internal:28081'

management:
  endpoints:
    web:
      base-path: /
      path-mapping:
        info: info
        health: health
        prometheus: metrics
      exposure:
        include: "health,info,prometheus"
    jmx:
      exposure:
        include: "health,info,prometheus"
  endpoint:
    info:
      enabled: true
    health:
      enabled: true
    prometheus:
      enabled: true
  server:
    port: 8083
  metrics:
    export:
      prometheus:
        enabled: true
    tags:
      application: ${spring.application.name}
